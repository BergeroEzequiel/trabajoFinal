<beans xmlns="http://www.springframework.org/schema/beans" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
          <value>app.properties</value>
        </property>
    </bean>	

	<!-- Data Source Declaration -->
    <bean id="DataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />   
        <property name="testOnConnect" value="true" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="true" />
        <property name="testOnReturn" value="true" />
        <property name="logValidationErrors" value="true" />
        <property name="validationQuery" value="select 1 from dual" />
        <property name="validationQueryTimeout" value="10" />
        <property name="maxActive" value="500" />
        <property name="initialSize" value="150" /> 
        <property name="maxIdle" value="500" /> <!--El numero maximo de conexiones posibles en el pool todo el tiempo. Si alguna pasa el minEvictableIdleTimeMillis, se libera.-->
        <property name="minIdle" value="150" /> <!-- El numero minimo de conexiones que debe tener el pool. -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" /> <!-- Indica la frecuencia con la que se comprueban las conexiones activas/abandonadas y etc. -->
        <property name="minEvictableIdleTimeMillis" value="120000" /> <!--Las conexiones inactivas por mas de 180000 mili segundos se liberan. -->
        <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="180" /> <!-- Si una query tarda mas de esto, se la considera disponible para remover. -->
        <property name="maxAge" value="0" />
        <property name="initSQL" value="SET GLOBAL max_connections = 1000" />
    </bean>
    
    <!-- Session Factory Declaration -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="DataSource" />
        <property name="packagesToScan">
            <list>
                <value>ar.edu.ucc.trabajoFinal.model</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!--Si lo ponemos en true lo cargamos mucho al tomcat (y llenamos demasiados los logs)-->
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.connection.useUnicode">true</prop>
                <prop key="hibernate.connection.characterEncoding">UTF-8</prop>
                <prop key="hibernate.connection.SetBigStringTryClob">true</prop>
                <prop key="hibernate.jdbc.batch_size">0</prop>
            </props>
        </property>
    </bean>
	
	

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributeSource">
			<bean
				class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
		</property>
	</bean>

	<bean id="transactionAdvisor"
		class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
		<constructor-arg ref="transactionInterceptor" />
	</bean>

	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

</beans>